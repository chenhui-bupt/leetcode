/*
需要思考为什么只要两种可能，要么为1，要么循环，而不会有无限不循环。
我们考虑每一位的最大数，会发现他的平方和一直在收缩，因此他肯定不是无限不循环的，比如
一位时最大值为9，平方和为81；
两位时最大值为99，平方和为162；
三位时最大值为999，平方和为243；
四位时最大值为9999，平方和为324；
会发现平方和一直在收缩！！

算法1：下一位 + 哈希表判断循环
算法2：弗洛伊德Floyd判圈算法 + 快慢指针
*/
class Solution {
public:
    bool isHappy(int n) {
        unordered_set<int> st;
        while (n != 1 && st.find(n) == st.end()) {
            st.insert(n);
            int m = 0;
            while (n) {
                m += (n % 10) * (n % 10);
                n /= 10;
            }
            n = m;
        }
        return n == 1;
    }
};