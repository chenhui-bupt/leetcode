/**
 * 算法一：循环除3，判断能否被整除
 * 算法二：鉴于算法一需要一直循环除，可以进一步思考n如果是3的幂次方，那么3*n一定也是3的幂次方
 * 所以n一定是3的最大次幂的一个约数，即n * 3^k = 3^19
 */

class Solution {
public:
    bool isPowerOfThree(int n) {
        // 算法一：循环
        while (n > 0 && n % 3 == 0) {
            n /= 3;
        }
        return n == 1;
        // 算法二：幂之间的关系
        return n > 0 && 1162261467 % n == 0;
    }
};